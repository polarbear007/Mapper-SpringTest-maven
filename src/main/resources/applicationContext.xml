<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- 配置dataSource对象 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql:///mybatis_mapper?serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;allowMultiQueries=true"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>
	</bean>
	
	<!-- 配置sqlSessionFactory 
		配置通用mapper，我们需要修改这个生成 SqlSessionFactory 的工厂类，但通用Mapper 不需要
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引入dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 引入原来 mybatis 的核心配置文件，虽然可能已经没有什么内容了，演示一下怎么引入即可 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		
		<!-- 在spring 配置文件中添加 mybatisplus 插件的方法 -->
		<property name="plugins">
			<array>
				<!-- PageHelper 分页插件 -->
				<bean class="com.github.pagehelper.PageInterceptor" />
			</array>
		</property>
	</bean>
	
	<!-- 配置自动扫描dao层下的mapper 接口， 建议把映射文件也放在 同一目录，这样我们就不需要另外配置映射文件
		与 通用 Mapper 整合，我们只需要把原来 Mapper 扫描类改成下面的类即可：
		tk.mybatis.spring.mapper.MapperScannerConfigurer
		原来的类名是以   org 开头的，现在改成 tk 开头的就行了
	-->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.itcast.mapper"/>
	</bean>
	 
	
	<!-- 配置一下事务管理器，只要用到数据库，就得配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置一下spring 注解支持 -->
	<context:annotation-config />
	<context:component-scan base-package="cn.itcast" />
	
	<!-- 配置一下事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置一下aop 注解支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>